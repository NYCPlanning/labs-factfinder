<ul class="menu align-center menu--selector">
  <li class="{{if (eq selection.summaryLevel 'blocks') 'active'}} explode-block">
    <a href="#" {{action 'handleSummaryLevelToggle' 'blocks'}}><span class="show-for-medium">Census </span>Block</a>
    {{tooltip-on-element delay=500 text='Create selection area using census blocks'}}
  </li>
  <li class="{{if (eq selection.summaryLevel 'tracts') 'active'}} explode-tract">
    <a href="#" {{action 'handleSummaryLevelToggle' 'tracts'}}><span class="show-for-medium">Census </span>Tract</a>
    {{tooltip-on-element delay=500 text='Create selection area using census tracts'}}
  </li>
  <li class="{{if (eq selection.summaryLevel 'ntas') 'active'}} explode-nta">
    <a href="#" {{action 'handleSummaryLevelToggle' 'ntas'}}>Neighborhood&nbsp;<small>(NTA)</small></a>
    {{tooltip-on-element delay=500 text='Create selection area using Neighborhood Tabulation Areas'}}
  </li>
  <li class="{{if (eq selection.summaryLevel 'pumas') 'active'}} explode-puma">
    <a href="#" {{action 'handleSummaryLevelToggle' 'pumas'}}>PUMA</a>
    {{tooltip-on-element delay=500 text='Create selection area using Public Use Microdata Areas'}}
  </li>
</ul>
<div class="map-container">
  {{#labs-map
    id='map'

    initOptions=(hash zoom=zoom
                      center=center
                      hash=true)
    mapLoaded=(action 'handleMapLoad')
    as |map|}}

    {{#map.labs-layers
      onLayerClick=(action 'handleClick')
      layerGroups=model.layerGroups as |layers|}}
    {{/map.labs-layers}}

    {{#map.source sourceId='bk-qn-mh-boundary' options=bkQnMhBoundarySource as |source|}}
      {{map.layer layer=bkQnMhBoundaryLayer}}
    {{/map.source}}

    {{map.layer layer=subduedNtaLabels}}

    {{#if selection.currentAddress}}
      {{#map.source sourceId='currentAddress' options=selection.addressSource as |source|}}
        {{source.layer layer=selection.pointLayer}}
      {{/map.source}}
    {{/if}}

    {{#if selection.searchResultFeature}}
      {{#map.source sourceId='searchResultSource' options=selection.searchResultSource as |source|}}
        {{source.layer layer=selection.searchResultLayer}}
      {{/map.source}}
    {{/if}}

    {{map.layer-group config=layerGroups.censusBlocks visible=(eq selection.summaryLevel 'blocks')}}

    {{map.layer-group config=layerGroups.censusTracts visible=(or (eq selection.summaryLevel 'tracts') (eq selection.summaryLevel 'blocks'))}}

    {{map.layer-group config=layerGroups.neighborhoodTabulationAreasSelection visible=(eq selection.summaryLevel 'ntas')}}

    {{map.layer-group config=layerGroups.nycPumasSelection visible=(eq selection.summaryLevel 'pumas')}}

    {{map.layer-group config=layerGroups.choropleths visible=false}}

    {{map.source sourceId='choropleths' options=choroplethsSource}}

    {{#if selection.current}}
      {{#map.source
        sourceId='selected-features'
        options=selectedSource as |source|}}
        {{source.layer
          layer=selectedFillLayer
          before='place_other'}}
        {{source.layer
          before='place_other'}}
      {{/map.source}}
    {{/if}}

    {{#if mapMouseover.highlightedFeature}}
      {{#map.source
        sourceId='highlighted-feature'
        options=mapMouseover.highlightedFeatureSource as |source|}}
        {{source.layer
          layer=highlightedFeature
          before='place_other'}}
      {{/map.source}}
    {{/if}}

    {{#if customVisualOverlayLines}}
      {{#map.source
        sourceId='custom-overlay'
        options=(hash
          type='geojson'
          data=customVisualOverlayData
        ) as |source|}}
        {{source.layer
          layer=(hash
            type='line'
            layout=(hash line-cap='butt')
            paint=(hash
              line-color='rgba(255, 0, 185, 0.5)'
              line-width=(hash
                stops=(array (array 11 3) (array 12 6))
              )
              line-dasharray=(array 1 0.5)
            )
          )
          before='place_village'}}

      {{/map.source}}
    {{/if}}

    {{#if customVisualOverlayPoints}}
      {{#map.source
        sourceId='custom-overlay'
        options=(hash
          type='geojson'
          data=customVisualOverlayData
        ) as |source|}}
        {{source.layer
          layer=(hash
            type='circle'
            paint=(hash
              circle-color='rgba(255, 0, 185, 1)'
              circle-radius=(hash
                stops=(array (array 9 2) (array 14 3) (array 16 4))
              )
              circle-stroke-color='rgba(230, 0, 167, 1)'
              circle-stroke-width=(hash
                stops=(array (array 9 1) (array 14 2) (array 16 3))
              )
            )
          )
          before='place_village'}}

      {{/map.source}}
    {{/if}}

    {{map.on 'draw.modechange' (action 'handleDrawModeChange')}}
    {{map.on 'draw.create' (action 'handleDrawCreate')}}
    {{map.on 'click' (action 'handleClick')}}
    {{map.on 'mousemove' (action 'handleMousemove')}}

  {{/labs-map}}
</div>

{{#map-utility-box lastreport=lastreport mode=mode drawMode=drawMode handleDrawButtonClick=(action "handleDrawButtonClick")}}
  {{drop-zone
    url='#'
    addedfile=(action 'addedfile')
    removedfile=(action 'removedfile')
    dictDefaultMessage='Drag & drop a zipped shapefile here to add it as an overlay'
    createImageThumbnails=false
    acceptedFiles='application/zip'
    addRemoveLinks=true
  }}
{{/map-utility-box}}

{{outlet}}
