<ul class="menu align-center menu--selector">
  <li class="{{if (eq selection.summaryLevel 'blocks') 'active'}} explode-block">
    <a href="#" data-test-toggle-blocks {{action 'handleSummaryLevelToggle' 'blocks'}}>
      <span class="show-for-medium">Census </span>
      Block
    </a>
    {{ember-tooltip delay=500 text='Create selection area using census blocks'}}
  </li>
  <li class="{{if (eq selection.summaryLevel 'tracts') 'active'}} explode-tract">
    <a href="#" data-test-toggle-tracts {{action 'handleSummaryLevelToggle' 'tracts'}}>
      <span class="show-for-medium">Census </span>
      Tract
    </a>
    {{ember-tooltip delay=500 text='Create selection area using census tracts'}}
  </li>
  <li class="{{if (eq selection.summaryLevel 'ntas') 'active'}} explode-nta">
    <a href="#" data-test-toggle-ntas {{action 'handleSummaryLevelToggle' 'ntas'}}>Neighborhood&nbsp;<small>(NTA)</small></a>
    {{ember-tooltip delay=500 text='Create selection area using Neighborhood Tabulation Areas'}}
  </li>
  <li class="{{if (eq selection.summaryLevel 'pumas') 'active'}} explode-puma">
    <a href="#" data-test-toggle-pumas {{action 'handleSummaryLevelToggle' 'pumas'}}>PUMA</a>
    {{ember-tooltip delay=500 text='Create selection area using Public Use Microdata Areas'}}
  </li>
</ul>
<div class="map-container">
  {{#labs-map
    id='map'
    sources=sources
    initOptions=(hash zoom=zoom
                      center=center
                      hash=true)
    mapLoaded=(action 'handleMapLoad')
    as |map|}}

    {{#map.labs-layers
      onLayerClick=(action 'handleClick')
      layerGroups=model.layerGroups as |layers|}}
      {{#layers.tooltip as |tooltip|}}
        {{tooltip-renderer
          feature=tooltip.feature
          template=tooltip.layer.tooltipTemplate}}
      {{/layers.tooltip}}
    {{/map.labs-layers}}

    {{!-- TODO --}}
    {{map.layer layer=subduedNtaLabels}}

    {{#if selection.currentAddress}}
      {{#map.source sourceId='currentAddress' options=selection.addressSource as |source|}}
        {{source.layer layer=selection.pointLayer}}
      {{/map.source}}
    {{/if}}

    {{#if selection.searchResultFeature}}
      {{#map.source sourceId='searchResultSource' options=selection.searchResultSource as |source|}}
        {{source.layer layer=selection.searchResultLayer}}
      {{/map.source}}
    {{/if}}

    {{map.layer-group
      config=layerGroups.choropleths
      visible=false}}

    {{map.source
      sourceId='choropleths'
      options=choroplethsSource}}

    {{#if selection.current}}
      {{#map.source
        sourceId='selected-features'
        options=selectedSource as |source|}}
        {{source.layer
          layer=selectedFillLayer
          before='place_other'}}
        {{source.layer
          before='place_other'}}
      {{/map.source}}
    {{/if}}

    {{#if mapMouseover.highlightedFeature}}
      {{#map.source
        sourceId='highlighted-feature'
        options=mapMouseover.highlightedFeatureSource as |source|}}
        {{source.layer
          layer=highlightedFeature
          before='place_other'}}
      {{/map.source}}
    {{/if}}

    {{#if customVisualOverlayLines}}
      {{#map.source
        sourceId='custom-overlay'
        options=(hash
          type='geojson'
          data=customVisualOverlayData
        ) as |source|}}
        {{source.layer
          layer=(hash
            type='line'
            layout=(hash line-cap='butt')
            paint=(hash
              line-color='rgba(255, 0, 185, 0.75)'
              line-width=(hash
                stops=(array (array 11 2) (array 13 4))
              )
              line-dasharray=(array 0.75 1)
            )
          )
          before='place_village'}}

      {{/map.source}}
    {{/if}}

    {{#if customVisualOverlayPoints}}
      {{#map.source
        sourceId='custom-overlay'
        options=(hash
          type='geojson'
          data=customVisualOverlayData
        ) as |source|}}
        {{source.layer
          layer=(hash
            type='circle'
            paint=(hash
              circle-color='rgba(255, 0, 185, 1)'
              circle-radius=(hash
                stops=(array (array 9 2) (array 14 3) (array 16 4))
              )
              circle-stroke-color='rgba(230, 0, 167, 1)'
              circle-stroke-width=(hash
                stops=(array (array 9 1) (array 14 2) (array 16 3))
              )
            )
          )
          before='place_village'}}

      {{/map.source}}
    {{/if}}

    {{map.on 'draw.modechange' (action 'handleDrawModeChange')}}
    {{map.on 'draw.create' (action 'handleDrawCreate')}}
    {{!-- {{map.on 'click' (action 'handleClick')}} --}}
    {{!-- {{map.on 'mousemove' (action 'handleMousemove')}} --}}

  {{/labs-map}}
</div>

{{#map-utility-box
  lastreport=lastreport
  mode=mode
  drawMode=drawMode
  handleDrawButtonClick=(action "handleDrawButtonClick")
}}
  {{drop-zone
    url='#'
    addedfile=(action 'addedfile')
    removedfile=(action 'removedfile')
    dictDefaultMessage='Drag & drop a zipped shapefile here to add it as an overlay'
    createImageThumbnails=false
    acceptedFiles='application/zip'
    addRemoveLinks=true
    autoProcessQueue=false
  }}
{{/map-utility-box}}

{{outlet}}
