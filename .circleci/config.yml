version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8-browsers
      # - image: circleci/node:6-browsers
        environment:
            CHROME_BIN: "/usr/bin/google-chrome"
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: COVERAGE=TRUE yarn test

      - run: curl -s https://codecov.io/bash | bash

      # deploy
      - run:
          name: Avoid hosts unknown for github
          command: ssh-keyscan planninglabs.nyc >> ~/.ssh/known_hosts
      - deploy:
          name: Deployment
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              yarn build -e production
              cd dist
              touch .static
              git init
              git add .
              git -c user.name='Labs Deploy Script' -c user.email='labs_dl@planning.nyc.gov' commit -m "deploy"
              git remote add dokku dokku@planninglabs.nyc:factfinder && git push -f dokku master
            elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
              yarn build -e staging
              cd dist
              touch .static
              git init
              git add .
              git -c user.name='Labs Deploy Script' -c user.email='labs_dl@planning.nyc.gov' commit -m "deploy"
              git remote add dokku dokku@planninglabs.nyc:factfinder-staging && git push -f dokku master
            fi
